{"ast":null,"code":"var _jsxFileName = \"/home/whentony/Documentos/dev/cursos e afins/React-Redux/redux-iniciante/src/components/TodoList.jsx\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as todoActions from '../actions/todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newTodoText: ''\n    };\n\n    this.addNewTodo = () => {\n      this.props.addNewTodo(this.state.newTodoText);\n      this.setState({\n        newTodoText: ''\n      });\n      console.log(this.props);\n    };\n\n    console.log(props);\n  }\n\n  render() {\n    const {\n      newTodoText,\n      addNewTodo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Item do todo \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTodoText,\n        onChange: e => this.setState({\n          newTodoText: e.target.value\n        }),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewTodo,\n        children: \"Novo todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst MapDispatchToProps = dispatch => bindActionCreators(todoActions, dispatch);\n\n_c = MapDispatchToProps;\nexport default connect(null, MapDispatchToProps)(TodoList);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapDispatchToProps\");","map":{"version":3,"sources":["/home/whentony/Documentos/dev/cursos e afins/React-Redux/redux-iniciante/src/components/TodoList.jsx"],"names":["React","Component","bindActionCreators","connect","todoActions","TodoList","constructor","props","state","newTodoText","addNewTodo","setState","console","log","render","e","target","value","MapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;;;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAKnBC,KALmB,GAKX;AACJC,MAAAA,WAAW,EAAG;AADV,KALW;;AAAA,SAQnBC,UARmB,GAQN,MAAM;AACf,WAAKH,KAAL,CAAWG,UAAX,CAAsB,KAAKF,KAAL,CAAWC,WAAjC;AAEA,WAAKE,QAAL,CAAc;AAACF,QAAAA,WAAW,EAAE;AAAd,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACH,KAbkB;;AAEfK,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH;;AAYDO,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEL,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA8B,KAAKH,KAAzC;AACA,wBACI;AAAA,8BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AACA,QAAA,KAAK,EAAIE,WADT;AAEA,QAAA,QAAQ,EAAIM,CAAD,IAAO,KAAKJ,QAAL,CAAc;AAACF,UAAAA,WAAW,EAAEM,CAAC,CAACC,MAAF,CAASC;AAAvB,SAAd,CAFlB;AAGA,QAAA,IAAI,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAQ,QAAA,OAAO,EAAEP,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,oBADJ;AAYH;;AA/B4B;;AAkCjC,MAAMQ,kBAAkB,GAAGC,QAAQ,IAC/BjB,kBAAkB,CAACE,WAAD,EAAce,QAAd,CADtB;;KAAMD,kB;AAIN,eAAef,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport * as todoActions from '../actions/todo'\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n    }\n\n    state = {\n        newTodoText : ''\n    }\n    addNewTodo = () => {\n        this.props.addNewTodo(this.state.newTodoText);\n\n        this.setState({newTodoText: ''})\n        console.log(this.props)\n    }\n\n    render() {\n\n        const { newTodoText, addNewTodo } = this.props;\n        return (\n            <>\n                <ul>\n                    <li> Item do todo </li>\n                </ul>\n                <input \n                value = {newTodoText}\n                onChange ={(e) => this.setState({newTodoText: e.target.value})}\n                type=\"text\" />\n                <button onClick={addNewTodo}>Novo todo</button>\n            </>\n        );\n    }\n}\n\nconst MapDispatchToProps = dispatch => \n    bindActionCreators(todoActions, dispatch);\n\n\nexport default connect(null, MapDispatchToProps)(TodoList);"]},"metadata":{},"sourceType":"module"}