{"ast":null,"code":"var _jsxFileName = \"/home/whentony/Documentos/dev/cursos e afins/React-Redux/redux-iniciante/src/components/TodoList.jsx\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as todoActions from '../actions/todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newTodoText: ''\n    };\n\n    this.addNewTodo = () => {\n      this.props.addTodo(this.state.newTodoText);\n      this.setState({\n        newTodoText: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.todo.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: todo.text\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.newTodoText,\n        onChange: e => this.setState({\n          newTodoText: e.target.value\n        }),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addNewTodo,\n        children: \"Novo todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  todo: state.todo\n});\n\nconst MapDispatchToProps = dispatch => bindActionCreators(todoActions, dispatch);\n\n_c = MapDispatchToProps;\nexport default connect(mapStateToProps, MapDispatchToProps)(TodoList);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapDispatchToProps\");","map":{"version":3,"sources":["/home/whentony/Documentos/dev/cursos e afins/React-Redux/redux-iniciante/src/components/TodoList.jsx"],"names":["React","Component","bindActionCreators","connect","todoActions","TodoList","constructor","props","state","newTodoText","addNewTodo","addTodo","setState","render","todo","map","text","id","e","target","value","mapStateToProps","MapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;;;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAKnBC,KALmB,GAKX;AACJC,MAAAA,WAAW,EAAG;AADV,KALW;;AAAA,SAQnBC,UARmB,GAQN,MAAM;AACf,WAAKH,KAAL,CAAWI,OAAX,CAAmB,KAAKH,KAAL,CAAWC,WAA9B;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAE;AAAd,OAAd;AACH,KAXkB;AAGlB;;AASDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,kBACK,KAAKN,KAAL,CAAWO,IAAX,CAAgBC,GAAhB,CAAoBD,IAAI,iBACrB;AAAA,oBAAmBA,IAAI,CAACE;AAAxB,WAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AACA,QAAA,KAAK,EAAI,KAAKT,KAAL,CAAWC,WADpB;AAEA,QAAA,QAAQ,EAAIS,CAAD,IAAO,KAAKN,QAAL,CAAc;AAACH,UAAAA,WAAW,EAAES,CAAC,CAACC,MAAF,CAASC;AAAvB,SAAd,CAFlB;AAGA,QAAA,IAAI,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI;AAAQ,QAAA,OAAO,EAAE,KAAKV,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA,oBADJ;AAcH;;AA5B4B;;AA+BjC,MAAMW,eAAe,GAAGb,KAAK,KAAK;AAC9BM,EAAAA,IAAI,EAAEN,KAAK,CAACM;AADkB,CAAL,CAA7B;;AAIA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAC/BrB,kBAAkB,CAACE,WAAD,EAAcmB,QAAd,CADtB;;KAAMD,kB;AAIN,eAAenB,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport * as todoActions from '../actions/todo'\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n       \n    }\n\n    state = {\n        newTodoText : ''\n    }\n    addNewTodo = () => {\n        this.props.addTodo(this.state.newTodoText);\n        this.setState({newTodoText: ''})\n    }\n    render() {\n        return (\n            <>\n                <ul>\n                    {this.props.todo.map(todo => (\n                        <li key={todo.id}>{todo.text}</li>\n                    ))}\n                </ul>\n                <input \n                value = {this.state.newTodoText}\n                onChange ={(e) => this.setState({newTodoText: e.target.value})}\n                type=\"text\" />\n                <button onClick={this.addNewTodo}>Novo todo</button>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    todo: state.todo\n})\n\nconst MapDispatchToProps = dispatch => \n    bindActionCreators(todoActions, dispatch);\n\n\nexport default connect(mapStateToProps, MapDispatchToProps)(TodoList);"]},"metadata":{},"sourceType":"module"}